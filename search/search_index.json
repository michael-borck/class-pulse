{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ClassPulse Documentation","text":""},{"location":"#what-is-classpulse","title":"What is ClassPulse?","text":"<p>ClassPulse is a real-time audience interaction tool that allows presenters to engage with their audience through interactive questions and live visualizations. Similar to platforms like Mentimeter, ClassPulse enables presenters to create various question types and audience members to respond using a simple web interface.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Multiple Question Types</li> <li>Multiple Choice Questions (visualized as bar charts)</li> <li>Word Cloud Questions (for gathering text responses)</li> <li> <p>Rating Scale Questions (1-5 or custom scale)</p> </li> <li> <p>Real-time Results</p> </li> <li>Live updating visualizations</li> <li>WebSocket-based communication</li> <li> <p>No page reloads required</p> </li> <li> <p>Simple Audience Join</p> </li> <li>6-digit session codes</li> <li>QR code support</li> <li> <p>No account required for audience members</p> </li> <li> <p>Data Export</p> </li> <li>Export results as CSV</li> <li>Individual question or entire session export</li> </ul>"},{"location":"#about-this-documentation","title":"About This Documentation","text":"<p>This documentation provides comprehensive information about ClassPulse, from installation and basic usage to technical details and development guides. Use the navigation menu to explore different sections.</p> <ul> <li>Getting Started: Installation and basic usage guide</li> <li>Architecture: System architecture and components</li> <li>Technical Specification: Detailed requirements and specifications</li> <li>Developer Guide: Guide for developers working with the codebase</li> <li>Data Flow: Visual representation of data flows through the system</li> <li>API Reference: Complete reference of all APIs and functions</li> </ul>"},{"location":"#tech-stack","title":"Tech Stack","text":"<p>ClassPulse is built with:</p> <ul> <li>Backend: Python with FastHTML framework</li> <li>Frontend: HTML, CSS, JavaScript</li> <li>Database: SQLite with FastLite ORM</li> <li>Real-time: WebSockets</li> <li>Visualizations: Chart.js and jQCloud</li> </ul>"},{"location":"#license","title":"License","text":"<p>ClassPulse is released under [choose an appropriate license]</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions to ClassPulse! See our Getting Started guide for information on setting up your development environment.</p>"},{"location":"API_REFERENCE/","title":"ClassPulse API Reference","text":"<p>This document provides a comprehensive reference for all the API endpoints, functions, and utilities available in the ClassPulse application. Use this reference when working with the codebase.</p>"},{"location":"API_REFERENCE/#table-of-contents","title":"Table of Contents","text":"<ul> <li>HTTP Endpoints</li> <li>WebSocket Endpoints</li> <li>Database API</li> <li>Authentication API</li> <li>Session Management API</li> <li>Utility Functions</li> </ul>"},{"location":"API_REFERENCE/#http-endpoints","title":"HTTP Endpoints","text":""},{"location":"API_REFERENCE/#authentication-routes","title":"Authentication Routes","text":""},{"location":"API_REFERENCE/#login-page","title":"Login Page","text":"<ul> <li>URL: <code>/login</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>auth_routes.py</code></li> <li>Description: Displays the login form</li> <li>Response: HTML login page</li> </ul>"},{"location":"API_REFERENCE/#process-login","title":"Process Login","text":"<ul> <li>URL: <code>/login</code></li> <li>Method: <code>POST</code></li> <li>Controller: <code>auth_routes.py</code></li> <li>Parameters: </li> <li><code>username</code> (string): User's username</li> <li><code>password</code> (string): User's password</li> <li>Description: Authenticates a user</li> <li>Response: Redirects to dashboard on success, shows error on failure</li> </ul>"},{"location":"API_REFERENCE/#logout","title":"Logout","text":"<ul> <li>URL: <code>/logout</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>auth_routes.py</code></li> <li>Description: Logs out the current user</li> <li>Response: Redirects to login page</li> </ul>"},{"location":"API_REFERENCE/#presenter-routes","title":"Presenter Routes","text":""},{"location":"API_REFERENCE/#dashboard","title":"Dashboard","text":"<ul> <li>URL: <code>/</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>presenter_routes.py</code></li> <li>Description: Displays the presenter dashboard</li> <li>Response: HTML dashboard page with active sessions</li> </ul>"},{"location":"API_REFERENCE/#sessions-list","title":"Sessions List","text":"<ul> <li>URL: <code>/sessions</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>presenter_routes.py</code></li> <li>Description: Lists all sessions for the current user</li> <li>Response: HTML page with session list</li> </ul>"},{"location":"API_REFERENCE/#new-session-form","title":"New Session Form","text":"<ul> <li>URL: <code>/sessions/new</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>presenter_routes.py</code></li> <li>Description: Displays the new session form</li> <li>Response: HTML form for session creation</li> </ul>"},{"location":"API_REFERENCE/#create-session","title":"Create Session","text":"<ul> <li>URL: <code>/sessions/new</code></li> <li>Method: <code>POST</code></li> <li>Controller: <code>presenter_routes.py</code></li> <li>Parameters:</li> <li><code>name</code> (string): Session name</li> <li>Description: Creates a new session</li> <li>Response: Redirects to session management page</li> </ul>"},{"location":"API_REFERENCE/#session-management","title":"Session Management","text":"<ul> <li>URL: <code>/sessions/{id}</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>presenter_routes.py</code></li> <li>Parameters:</li> <li><code>id</code> (integer): Session ID</li> <li>Description: Displays the session management page</li> <li>Response: HTML page with session details and questions</li> </ul>"},{"location":"API_REFERENCE/#present-mode","title":"Present Mode","text":"<ul> <li>URL: <code>/present/{id}</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>presenter_routes.py</code></li> <li>Parameters:</li> <li><code>id</code> (integer): Session ID</li> <li>Description: Displays the presenter view with real-time results</li> <li>Response: HTML page with real-time question results</li> </ul>"},{"location":"API_REFERENCE/#question-routes","title":"Question Routes","text":""},{"location":"API_REFERENCE/#new-question-form","title":"New Question Form","text":"<ul> <li>URL: <code>/sessions/{session_id}/questions/new/{type}</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>question_routes.py</code></li> <li>Parameters:</li> <li><code>session_id</code> (integer): Session ID</li> <li><code>type</code> (string): Question type (multiple_choice, word_cloud, rating)</li> <li>Description: Displays the form for creating a new question</li> <li>Response: HTML form for question creation</li> </ul>"},{"location":"API_REFERENCE/#create-multiple-choice-question","title":"Create Multiple Choice Question","text":"<ul> <li>URL: <code>/sessions/{session_id}/questions/new/multiple_choice</code></li> <li>Method: <code>POST</code></li> <li>Controller: <code>question_routes.py</code></li> <li>Parameters:</li> <li><code>session_id</code> (integer): Session ID</li> <li><code>title</code> (string): Question title</li> <li><code>options</code> (string): Question options (newline-separated)</li> <li>Description: Creates a new multiple choice question</li> <li>Response: Redirects to session management page</li> </ul>"},{"location":"API_REFERENCE/#create-word-cloud-question","title":"Create Word Cloud Question","text":"<ul> <li>URL: <code>/sessions/{session_id}/questions/new/word_cloud</code></li> <li>Method: <code>POST</code></li> <li>Controller: <code>question_routes.py</code></li> <li>Parameters:</li> <li><code>session_id</code> (integer): Session ID</li> <li><code>title</code> (string): Question title</li> <li>Description: Creates a new word cloud question</li> <li>Response: Redirects to session management page</li> </ul>"},{"location":"API_REFERENCE/#create-rating-question","title":"Create Rating Question","text":"<ul> <li>URL: <code>/sessions/{session_id}/questions/new/rating</code></li> <li>Method: <code>POST</code></li> <li>Controller: <code>question_routes.py</code></li> <li>Parameters:</li> <li><code>session_id</code> (integer): Session ID</li> <li><code>title</code> (string): Question title</li> <li><code>max_rating</code> (integer): Maximum rating value (default: 5)</li> <li>Description: Creates a new rating question</li> <li>Response: Redirects to session management page</li> </ul>"},{"location":"API_REFERENCE/#question-results","title":"Question Results","text":"<ul> <li>URL: <code>/questions/{id}/results</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>question_routes.py</code></li> <li>Parameters:</li> <li><code>id</code> (integer): Question ID</li> <li>Description: Displays the question results with visualizations</li> <li>Response: HTML page with result visualizations</li> </ul>"},{"location":"API_REFERENCE/#export-question-results","title":"Export Question Results","text":"<ul> <li>URL: <code>/questions/{id}/export</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>question_routes.py</code></li> <li>Parameters:</li> <li><code>id</code> (integer): Question ID</li> <li>Description: Exports question results as CSV</li> <li>Response: CSV file download</li> </ul>"},{"location":"API_REFERENCE/#export-session-results","title":"Export Session Results","text":"<ul> <li>URL: <code>/sessions/{id}/export</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>question_routes.py</code></li> <li>Parameters:</li> <li><code>id</code> (integer): Session ID</li> <li>Description: Exports all session results as CSV</li> <li>Response: CSV file download</li> </ul>"},{"location":"API_REFERENCE/#audience-routes","title":"Audience Routes","text":""},{"location":"API_REFERENCE/#join-form","title":"Join Form","text":"<ul> <li>URL: <code>/join</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>audience_routes.py</code></li> <li>Description: Displays the session join form</li> <li>Response: HTML join form</li> </ul>"},{"location":"API_REFERENCE/#process-join","title":"Process Join","text":"<ul> <li>URL: <code>/join</code></li> <li>Method: <code>POST</code></li> <li>Controller: <code>audience_routes.py</code></li> <li>Parameters:</li> <li><code>code</code> (string): Session code</li> <li>Description: Processes a join request</li> <li>Response: Redirects to audience view on success, shows error on failure</li> </ul>"},{"location":"API_REFERENCE/#audience-view","title":"Audience View","text":"<ul> <li>URL: <code>/audience/{code}</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>audience_routes.py</code></li> <li>Parameters:</li> <li><code>code</code> (string): Session code</li> <li>Description: Displays the audience view with active questions</li> <li>Response: HTML page with question forms</li> </ul>"},{"location":"API_REFERENCE/#submit-response","title":"Submit Response","text":"<ul> <li>URL: <code>/audience/respond/{question_id}</code></li> <li>Method: <code>POST</code></li> <li>Controller: <code>audience_routes.py</code></li> <li>Parameters:</li> <li><code>question_id</code> (integer): Question ID</li> <li><code>response-{question_id}</code> (string): Response value</li> <li>Description: Submits a response to a question</li> <li>Response: HTML confirmation message</li> </ul>"},{"location":"API_REFERENCE/#api-endpoints","title":"API Endpoints","text":""},{"location":"API_REFERENCE/#toggle-session-status","title":"Toggle Session Status","text":"<ul> <li>URL: <code>/api/sessions/{id}/toggle</code></li> <li>Method: <code>POST</code></li> <li>Controller: <code>presenter_routes.py</code></li> <li>Parameters:</li> <li><code>id</code> (integer): Session ID</li> <li>Description: Toggles a session's active status</li> <li>Response: HTML for updated button</li> </ul>"},{"location":"API_REFERENCE/#toggle-question-status","title":"Toggle Question Status","text":"<ul> <li>URL: <code>/api/questions/{id}/toggle</code></li> <li>Method: <code>POST</code></li> <li>Controller: <code>question_routes.py</code></li> <li>Parameters:</li> <li><code>id</code> (integer): Question ID</li> <li>Description: Toggles a question's active status</li> <li>Response: HTML for updated button</li> </ul>"},{"location":"API_REFERENCE/#static-files","title":"Static Files","text":"<ul> <li>URL: <code>/static/{path}</code></li> <li>Method: <code>GET</code></li> <li>Controller: <code>app.py</code></li> <li>Parameters:</li> <li><code>path</code> (string): File path</li> <li>Description: Serves static files (CSS, JS, images)</li> <li>Response: Requested file</li> </ul>"},{"location":"API_REFERENCE/#websocket-endpoints","title":"WebSocket Endpoints","text":""},{"location":"API_REFERENCE/#question-results-websocket","title":"Question Results WebSocket","text":"<ul> <li>URL: <code>/ws/results/{question_id}</code></li> <li>Controller: <code>websocket_routes.py</code></li> <li>Parameters:</li> <li><code>question_id</code> (integer): Question ID</li> <li>Description: Provides real-time updates for question results</li> <li>Messages: HTML content with updated results</li> <li>Update Frequency: Every 2 seconds</li> <li>Example Usage:   <pre><code>&lt;div id=\"results-container\" \n     hx_ext=\"ws\" \n     ws_connect=\"/ws/results/123\"&gt;\n  Loading results...\n&lt;/div&gt;\n</code></pre></li> </ul>"},{"location":"API_REFERENCE/#database-api","title":"Database API","text":""},{"location":"API_REFERENCE/#tables","title":"Tables","text":""},{"location":"API_REFERENCE/#users","title":"users","text":"<ul> <li>Fields:</li> <li><code>id</code> (integer): Primary key</li> <li><code>username</code> (string): Unique username</li> <li><code>password_hash</code> (string): Hashed password with salt</li> <li><code>email</code> (string): User email</li> <li><code>display_name</code> (string): Display name</li> </ul>"},{"location":"API_REFERENCE/#sessions","title":"sessions","text":"<ul> <li>Fields:</li> <li><code>id</code> (integer): Primary key</li> <li><code>code</code> (string): Unique 6-digit join code</li> <li><code>name</code> (string): Session name</li> <li><code>created_at</code> (string): ISO timestamp</li> <li><code>user_id</code> (integer): Foreign key to users.id</li> <li><code>active</code> (boolean): Session active status</li> </ul>"},{"location":"API_REFERENCE/#questions","title":"questions","text":"<ul> <li>Fields:</li> <li><code>id</code> (integer): Primary key</li> <li><code>session_id</code> (integer): Foreign key to sessions.id</li> <li><code>type</code> (string): Question type</li> <li><code>title</code> (string): Question title</li> <li><code>options</code> (string): JSON string with options</li> <li><code>active</code> (boolean): Question active status</li> <li><code>created_at</code> (string): ISO timestamp</li> <li><code>order</code> (integer): Display order</li> </ul>"},{"location":"API_REFERENCE/#responses","title":"responses","text":"<ul> <li>Fields:</li> <li><code>id</code> (integer): Primary key</li> <li><code>question_id</code> (integer): Foreign key to questions.id</li> <li><code>session_id</code> (integer): Foreign key to sessions.id</li> <li><code>response_value</code> (string): Response content</li> <li><code>respondent_id</code> (string): Anonymous UUID</li> <li><code>created_at</code> (string): ISO timestamp</li> </ul>"},{"location":"API_REFERENCE/#query-methods","title":"Query Methods","text":""},{"location":"API_REFERENCE/#get-by-id","title":"Get by ID","text":"<pre><code># Get a record by primary key\nuser = users[user_id]\n</code></pre>"},{"location":"API_REFERENCE/#query-with-conditions","title":"Query with Conditions","text":"<pre><code># Query with WHERE clause\nresults = users(where=\"username = ?\", where_args=[\"admin\"])\n</code></pre>"},{"location":"API_REFERENCE/#insert-record","title":"Insert Record","text":"<pre><code># Create and insert a record\nuser = User(username=\"alice\", password_hash=\"hash\", email=\"email@example.com\")\nusers.insert(user)\n</code></pre>"},{"location":"API_REFERENCE/#update-record","title":"Update Record","text":"<pre><code># Update a record\nuser.display_name = \"New Name\"\nusers.update(user)\n</code></pre>"},{"location":"API_REFERENCE/#delete-record","title":"Delete Record","text":"<pre><code># Delete a record by ID\nusers.delete(user_id)\n</code></pre>"},{"location":"API_REFERENCE/#authentication-api","title":"Authentication API","text":""},{"location":"API_REFERENCE/#functions","title":"Functions","text":""},{"location":"API_REFERENCE/#hash_password","title":"hash_password","text":"<p><pre><code>def hash_password(password, salt=None)\n</code></pre> - Description: Hashes a password with PBKDF2 and salt - Parameters:   - <code>password</code> (string): Password to hash   - <code>salt</code> (string, optional): Salt to use (generates one if not provided) - Returns: String with format \"salt$hash\"</p>"},{"location":"API_REFERENCE/#verify_password","title":"verify_password","text":"<p><pre><code>def verify_password(stored_password, provided_password)\n</code></pre> - Description: Verifies a password against a stored hash - Parameters:   - <code>stored_password</code> (string): Stored password hash with salt   - <code>provided_password</code> (string): Password to verify - Returns: Boolean indicating if password matches</p>"},{"location":"API_REFERENCE/#register_user","title":"register_user","text":"<p><pre><code>def register_user(username, password, email, display_name=None)\n</code></pre> - Description: Registers a new user - Parameters:   - <code>username</code> (string): Username   - <code>password</code> (string): Password   - <code>email</code> (string): Email address   - <code>display_name</code> (string, optional): Display name - Returns: Tuple (success, message)</p>"},{"location":"API_REFERENCE/#authenticate_user","title":"authenticate_user","text":"<p><pre><code>def authenticate_user(username, password)\n</code></pre> - Description: Authenticates a user - Parameters:   - <code>username</code> (string): Username   - <code>password</code> (string): Password - Returns: User object if successful, None otherwise</p>"},{"location":"API_REFERENCE/#session-management-api","title":"Session Management API","text":""},{"location":"API_REFERENCE/#functions_1","title":"Functions","text":""},{"location":"API_REFERENCE/#create_session","title":"create_session","text":"<p><pre><code>def create_session(user_id, name)\n</code></pre> - Description: Creates a new session - Parameters:   - <code>user_id</code> (integer): User ID   - <code>name</code> (string): Session name - Returns: Session object</p>"},{"location":"API_REFERENCE/#get_session_by_code","title":"get_session_by_code","text":"<p><pre><code>def get_session_by_code(code)\n</code></pre> - Description: Gets a session by its code - Parameters:   - <code>code</code> (string): Session code - Returns: Session object or None</p>"},{"location":"API_REFERENCE/#get_user_sessions","title":"get_user_sessions","text":"<p><pre><code>def get_user_sessions(user_id)\n</code></pre> - Description: Gets all sessions for a user - Parameters:   - <code>user_id</code> (integer): User ID - Returns: List of Session objects</p>"},{"location":"API_REFERENCE/#toggle_session_status","title":"toggle_session_status","text":"<p><pre><code>def toggle_session_status(session_id)\n</code></pre> - Description: Toggles a session's active status - Parameters:   - <code>session_id</code> (integer): Session ID - Returns: New active status (boolean)</p>"},{"location":"API_REFERENCE/#create_multiple_choice_question","title":"create_multiple_choice_question","text":"<p><pre><code>def create_multiple_choice_question(session_id, title, options, order=0)\n</code></pre> - Description: Creates a multiple choice question - Parameters:   - <code>session_id</code> (integer): Session ID   - <code>title</code> (string): Question title   - <code>options</code> (list): List of options   - <code>order</code> (integer, optional): Display order - Returns: Question object</p>"},{"location":"API_REFERENCE/#create_word_cloud_question","title":"create_word_cloud_question","text":"<p><pre><code>def create_word_cloud_question(session_id, title, order=0)\n</code></pre> - Description: Creates a word cloud question - Parameters:   - <code>session_id</code> (integer): Session ID   - <code>title</code> (string): Question title   - <code>order</code> (integer, optional): Display order - Returns: Question object</p>"},{"location":"API_REFERENCE/#create_rating_question","title":"create_rating_question","text":"<p><pre><code>def create_rating_question(session_id, title, max_rating=5, order=0)\n</code></pre> - Description: Creates a rating question - Parameters:   - <code>session_id</code> (integer): Session ID   - <code>title</code> (string): Question title   - <code>max_rating</code> (integer, optional): Maximum rating value   - <code>order</code> (integer, optional): Display order - Returns: Question object</p>"},{"location":"API_REFERENCE/#get_session_questions","title":"get_session_questions","text":"<p><pre><code>def get_session_questions(session_id)\n</code></pre> - Description: Gets all questions for a session - Parameters:   - <code>session_id</code> (integer): Session ID - Returns: List of Question objects</p>"},{"location":"API_REFERENCE/#toggle_question_status","title":"toggle_question_status","text":"<p><pre><code>def toggle_question_status(question_id)\n</code></pre> - Description: Toggles a question's active status - Parameters:   - <code>question_id</code> (integer): Question ID - Returns: New active status (boolean)</p>"},{"location":"API_REFERENCE/#record_response","title":"record_response","text":"<p><pre><code>def record_response(question_id, session_id, value, respondent_id)\n</code></pre> - Description: Records a response to a question - Parameters:   - <code>question_id</code> (integer): Question ID   - <code>session_id</code> (integer): Session ID   - <code>value</code> (string): Response value   - <code>respondent_id</code> (string): Respondent ID - Returns: Response object</p>"},{"location":"API_REFERENCE/#get_question_stats","title":"get_question_stats","text":"<p><pre><code>def get_question_stats(question_id)\n</code></pre> - Description: Gets statistics for a question - Parameters:   - <code>question_id</code> (integer): Question ID - Returns: Dictionary with question statistics</p>"},{"location":"API_REFERENCE/#utility-functions","title":"Utility Functions","text":""},{"location":"API_REFERENCE/#qr-code-generation","title":"QR Code Generation","text":""},{"location":"API_REFERENCE/#create_qr_code_data","title":"create_qr_code_data","text":"<p><pre><code>def create_qr_code_data(url, size=200)\n</code></pre> - Description: Creates a QR code data URL for a given URL - Parameters:   - <code>url</code> (string): URL to encode   - <code>size</code> (integer, optional): QR code size in pixels - Returns: Data URL string or None on failure</p>"},{"location":"API_REFERENCE/#ui-components","title":"UI Components","text":""},{"location":"API_REFERENCE/#layout","title":"layout","text":"<p><pre><code>def layout(*content, title=\"ClassPulse\")\n</code></pre> - Description: Creates the main layout template - Parameters:   - <code>*content</code>: Content to include in the main area   - <code>title</code> (string, optional): Page title - Returns: HTML for the complete page</p>"},{"location":"API_REFERENCE/#session-helpers","title":"Session Helpers","text":""},{"location":"API_REFERENCE/#generate_session_code","title":"generate_session_code","text":"<p><pre><code>def generate_session_code(length=6)\n</code></pre> - Description: Generates a random alphanumeric code - Parameters:   - <code>length</code> (integer, optional): Code length - Returns: Random code string</p>"},{"location":"ARCHITECTURE/","title":"ClassPulse System Architecture","text":""},{"location":"ARCHITECTURE/#overview","title":"Overview","text":"<p>ClassPulse is a real-time audience interaction platform that allows presenters to engage with their audience through interactive questions. The system follows a modular architecture with clear separation of concerns, built using the FastHTML framework.</p>"},{"location":"ARCHITECTURE/#system-components","title":"System Components","text":""},{"location":"ARCHITECTURE/#1-core-components","title":"1. Core Components","text":"<pre><code>+-------------------+      +------------------+      +----------------+\n|                   |      |                  |      |                |\n|  Web Frontend     |&lt;----&gt;|  Backend Server  |&lt;----&gt;|  Database      |\n|  (HTML/CSS/JS)    |      |  (FastHTML/Python)|     |  (SQLite)      |\n|                   |      |                  |      |                |\n+-------------------+      +------------------+      +----------------+\n           ^                        ^\n           |                        |\n           v                        v\n+-------------------+      +------------------+\n|                   |      |                  |\n|  WebSocket        |&lt;----&gt;|  Real-time       |\n|  Communication    |      |  Events          |\n|                   |      |                  |\n+-------------------+      +------------------+\n</code></pre>"},{"location":"ARCHITECTURE/#2-architectural-patterns","title":"2. Architectural Patterns","text":"<p>ClassPulse employs several architectural patterns:</p> <ol> <li>Model-View-Controller (MVC)</li> <li>Models: Database schema and data access layer</li> <li>Views: HTML templates and FastHTML components</li> <li> <p>Controllers: Route handlers that process requests</p> </li> <li> <p>Service-Oriented Architecture</p> </li> <li>Modular utilities that provide specific services</li> <li> <p>Clear interfaces between components</p> </li> <li> <p>Real-time Event Processing</p> </li> <li>WebSocket connections for live updates</li> <li>Event-driven architecture for question responses</li> </ol>"},{"location":"ARCHITECTURE/#data-flow","title":"Data Flow","text":"<pre><code>  +----------------+        +-----------------+       +------------------+\n  |                |        |                 |       |                  |\n  | Audience Member|-------&gt;| Join Session    |------&gt;| View Questions   |\n  |                |        |                 |       |                  |\n  +----------------+        +-----------------+       +------------------+\n                                                             |\n                                                             v\n  +----------------+        +-----------------+       +------------------+\n  |                |        |                 |       |                  |\n  | Presenter      |&lt;-------| Real-time       |&lt;------| Submit Responses |\n  |                |        | Results Update  |       |                  |\n  +----------------+        +-----------------+       +------------------+\n        |\n        v\n  +----------------+\n  |                |\n  | Export Results |\n  |                |\n  +----------------+\n</code></pre>"},{"location":"ARCHITECTURE/#module-breakdown","title":"Module Breakdown","text":""},{"location":"ARCHITECTURE/#frontend-layer","title":"Frontend Layer","text":"<ol> <li>Static Assets</li> <li>CSS: Custom styling and layouts</li> <li>JavaScript: Client-side interactivity and chart rendering</li> <li> <p>Images: Icons and visual elements</p> </li> <li> <p>Templates</p> </li> <li>Presenter views: Dashboard, session management, results</li> <li>Audience views: Join page, question answering interfaces</li> </ol>"},{"location":"ARCHITECTURE/#backend-layer","title":"Backend Layer","text":"<ol> <li>Controllers</li> <li><code>auth_routes.py</code>: Authentication and user management</li> <li><code>audience_routes.py</code>: Audience-facing interfaces</li> <li><code>presenter_routes.py</code>: Presenter dashboard and management</li> <li><code>question_routes.py</code>: Question creation and result display</li> <li> <p><code>websocket_routes.py</code>: Real-time communication</p> </li> <li> <p>Utils</p> </li> <li><code>auth.py</code>: Authentication helpers and security</li> <li><code>components.py</code>: Reusable UI components</li> <li><code>qrcode.py</code>: QR code generation for easy session joining</li> <li> <p><code>session_manager.py</code>: Session and question management logic</p> </li> <li> <p>Models</p> </li> <li><code>schema.py</code>: Database tables, relationships, and data models</li> </ol>"},{"location":"ARCHITECTURE/#database-schema","title":"Database Schema","text":"<pre><code>+----------------+       +----------------+       +----------------+\n| Users          |       | Sessions       |       | Questions      |\n+----------------+       +----------------+       +----------------+\n| id             |&lt;-----&gt;| id             |&lt;-----&gt;| id             |\n| username       |       | code           |       | session_id     |\n| password_hash  |       | name           |       | type           |\n| email          |       | created_at     |       | title          |\n| display_name   |       | user_id        |       | options        |\n+----------------+       | active         |       | active         |\n                         +----------------+       | created_at     |\n                                                  | order          |\n                                                  +----------------+\n                                                          |\n                                                          v\n                                                  +----------------+\n                                                  | Responses      |\n                                                  +----------------+\n                                                  | id             |\n                                                  | question_id    |\n                                                  | session_id     |\n                                                  | response_value |\n                                                  | respondent_id  |\n                                                  | created_at     |\n                                                  +----------------+\n</code></pre>"},{"location":"ARCHITECTURE/#technology-stack","title":"Technology Stack","text":"<ol> <li>Backend</li> <li>Python 3.x</li> <li>FastHTML framework (Based on Starlette)</li> <li>Uvicorn ASGI server</li> <li> <p>FastLite (SQLite ORM)</p> </li> <li> <p>Frontend</p> </li> <li>HTML/CSS</li> <li>Vanilla JavaScript</li> <li>Chart.js for data visualization</li> <li> <p>jQCloud for word cloud rendering</p> </li> <li> <p>Data Storage</p> </li> <li> <p>SQLite database</p> </li> <li> <p>Real-time Communication</p> </li> <li>WebSockets for live updates</li> </ol>"},{"location":"ARCHITECTURE/#security-considerations","title":"Security Considerations","text":"<ol> <li>Authentication</li> <li>Password hashing with salt using PBKDF2</li> <li> <p>Session-based authentication</p> </li> <li> <p>Data Protection</p> </li> <li>Anonymous audience responses</li> <li>Session ownership verification</li> <li> <p>Input validation and sanitization</p> </li> <li> <p>Access Control</p> </li> <li>Route protection via middleware</li> <li>Session-based authorization</li> </ol>"},{"location":"ARCHITECTURE/#scalability-considerations","title":"Scalability Considerations","text":"<p>The current architecture can handle small to medium-sized classrooms or presentation scenarios. For larger deployments, consider:</p> <ol> <li>Database Scaling</li> <li>Migrate from SQLite to PostgreSQL or MySQL</li> <li> <p>Implement connection pooling</p> </li> <li> <p>Performance Optimization</p> </li> <li>Implement caching for frequent queries</li> <li> <p>Optimize WebSocket connections for high concurrency</p> </li> <li> <p>Deployment Options</p> </li> <li>Containerize with Docker</li> <li>Deploy with Gunicorn workers behind Nginx</li> </ol>"},{"location":"DATA_FLOW/","title":"ClassPulse Data Flow","text":"<p>This document describes how data flows through the ClassPulse system, from creation to visualization. Understanding these flows helps developers follow the execution path through the codebase.</p>"},{"location":"DATA_FLOW/#session-creation-flow","title":"Session Creation Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Presenter  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  sessions/  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  create_    \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  Database   \u2502\n\u2502             \u2502      \u2502  new route  \u2502      \u2502  session()  \u2502      \u2502  (sessions) \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                                      \u2502\n                                                                      \u2502\n                                                                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Session    \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  sessions/  \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  get_user_  \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Redirect   \u2502\n\u2502  Management \u2502      \u2502  {id} route \u2502      \u2502  sessions() \u2502      \u2502  Response   \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"DATA_FLOW/#question-creation-flow","title":"Question Creation Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Presenter  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  /sessions/ \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  Question   \u2502\n\u2502             \u2502      \u2502  {id} page  \u2502      \u2502  Form Page  \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                \u2502\n                                                \u2502\n                                                \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Creation   \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  create_X_  \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Form       \u2502\n\u2502  in Database\u2502      \u2502  question() \u2502      \u2502  Submission \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"DATA_FLOW/#audience-join-flow","title":"Audience Join Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Audience   \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  /join      \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  get_session\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  Validate   \u2502\n\u2502  Member     \u2502      \u2502  page       \u2502      \u2502  _by_code() \u2502      \u2502  Code       \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                                      \u2502\n                                                                      \u2502\n                                                                      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Question   \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  /audience/ \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Generate   \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Store in   \u2502\n\u2502  Display    \u2502      \u2502  {code}     \u2502      \u2502  UUID       \u2502      \u2502  Session    \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"DATA_FLOW/#response-submission-flow","title":"Response Submission Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Audience   \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  Form       \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  /audience/ \u2502\n\u2502  Member     \u2502      \u2502  Submission \u2502      \u2502  respond/{id}\u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                \u2502\n                                                \u2502\n                                                \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Store in   \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  record_    \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Extract    \u2502\n\u2502  Database   \u2502      \u2502  response() \u2502      \u2502  Data       \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                            \u2502\n                            \u2502\n                            \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                         \u2502\n\u2502  WebSocket Event (Notification to       \u2502\n\u2502  connected presenters for this question)\u2502\n\u2502                                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"DATA_FLOW/#real-time-results-flow","title":"Real-time Results Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Presenter  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  /present/  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  WebSocket  \u2502\n\u2502             \u2502      \u2502  {id}       \u2502      \u2502  Connection \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                \u2502\n                                                \u2502\n                                                \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Results    \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  /ws/results\u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Periodic   \u2502\n\u2502  Display    \u2502      \u2502  /{id}      \u2502      \u2502  Updates    \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                \u2502\n                                                \u2502\n                                                \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Chart.js   \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Update     \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  get_question\u2502\n\u2502  Rendering  \u2502      \u2502  HTML/Data  \u2502      \u2502  _stats()   \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"DATA_FLOW/#results-export-flow","title":"Results Export Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Presenter  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  /questions/\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  Query      \u2502\n\u2502             \u2502      \u2502  {id}/export\u2502      \u2502  Responses  \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                \u2502\n                                                \u2502\n                                                \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  CSV File   \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Format as  \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Process    \u2502\n\u2502  Download   \u2502      \u2502  CSV        \u2502      \u2502  Data       \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"DATA_FLOW/#authentication-flow","title":"Authentication Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  User       \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  /login     \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  authenticate\u2502\n\u2502             \u2502      \u2502  (POST)     \u2502      \u2502  _user()    \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                \u2502\n                                                \u2502\n                                                \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502 Success:    \u2502\n\u2502  User       \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Response   \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502 Store in    \u2502\n\u2502  Browser    \u2502      \u2502             \u2502      \u2502 Session     \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                \u2502\n                                                \u2502\n                                                \u25bc\n                                          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                          \u2502             \u2502\n                                          \u2502  Redirect   \u2502\n                                          \u2502  to Home    \u2502\n                                          \u2502             \u2502\n                                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"DATA_FLOW/#session-toggle-flow","title":"Session Toggle Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Presenter  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  \"Toggle\"   \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6  HTMX       \u2502\n\u2502             \u2502      \u2502  Button     \u2502      \u2502  Request    \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                \u2502\n                                                \u2502\n                                                \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             \u2502      \u2502             \u2502      \u2502             \u2502\n\u2502  Update UI  \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  Return     \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2502  toggle_    \u2502\n\u2502  Element    \u2502      \u2502  New HTML   \u2502      \u2502  session_   \u2502\n\u2502             \u2502      \u2502             \u2502      \u2502  status()   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"DATA_FLOW/#data-model-relationships","title":"Data Model Relationships","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                   \u2502       \u2502                   \u2502\n\u2502  User             \u2502       \u2502  Session          \u2502\n\u2502  ---------------  \u2502       \u2502  ---------------  \u2502\n\u2502  id               \u2502       \u2502  id               \u2502\n\u2502  username         \u2502       \u2502  code             \u2502\n\u2502  password_hash    \u2502       \u2502  name             \u2502\n\u2502  email            \u2502       \u2502  created_at       \u2502\n\u2502  display_name     \u2502       \u2502  user_id \u25c0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                   \u2502       \u2502  active           \u2502       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2502\n                                    \u2502                    \u2502\n                                    \u2502                    \u2502\n                                    \u25bc                    \u2502\n                            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502\n                            \u2502                   \u2502        \u2502\n                            \u2502  Question         \u2502        \u2502\n                            \u2502  ---------------  \u2502        \u2502\n                            \u2502  id               \u2502        \u2502\n                            \u2502  session_id \u25c0\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                            \u2502  type             \u2502\n                            \u2502  title            \u2502\n                            \u2502  options          \u2502\n                            \u2502  active           \u2502\n                            \u2502  created_at       \u2502\n                            \u2502  order            \u2502\n                            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                    \u2502\n                                    \u2502\n                                    \u25bc\n                            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                            \u2502                   \u2502\n                            \u2502  Response         \u2502\n                            \u2502  ---------------  \u2502\n                            \u2502  id               \u2502\n                            \u2502  question_id \u25c0\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                            \u2502  session_id \u25c0\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2510\n                            \u2502  response_value   \u2502        \u2502 \u2502\n                            \u2502  respondent_id    \u2502        \u2502 \u2502\n                            \u2502  created_at       \u2502        \u2502 \u2502\n                            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502 \u2502\n                                                         \u2502 \u2502\n                            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502 \u2502\n                            \u2502                   \u2502        \u2502 \u2502\n                            \u2502  Legend           \u2502        \u2502 \u2502\n                            \u2502  ---------------  \u2502        \u2502 \u2502\n                            \u2502  \u2192 Foreign Key    \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n                            \u2502  relationship     \u2502          \u2502\n                            \u2502                   \u2502\u25c0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"DATA_FLOW/#developer-notes","title":"Developer Notes","text":"<ol> <li> <p>The diagrams above illustrate the primary data flows in the ClassPulse application. These are simplified representations to help developers understand the codebase structure.</p> </li> <li> <p>The actual implementation may contain additional steps, error handling, and edge cases not depicted here.</p> </li> <li> <p>WebSocket connections maintain persistent state that is not fully represented in these diagrams. When a response is recorded, all connected presenters viewing that question are notified in real-time.</p> </li> <li> <p>The session toggle functionality uses HTMX to update UI elements without page reloads. The same pattern is used for question toggle functionality.</p> </li> <li> <p>When examining the code, refer to these diagrams to understand where a particular piece of functionality fits into the broader system.</p> </li> </ol>"},{"location":"DEVELOPER_GUIDE/","title":"ClassPulse Developer Guide","text":"<p>This guide is intended for developers who want to understand, modify, or extend the ClassPulse application. It provides detailed information about the codebase, key components, and how to implement common changes.</p>"},{"location":"DEVELOPER_GUIDE/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Getting Started</li> <li>Project Structure</li> <li>Key Components</li> <li>Database Schema</li> <li>Authentication Flow</li> <li>Session Management</li> <li>WebSocket Implementation</li> <li>Adding a New Question Type</li> <li>Customizing Visualizations</li> <li>Common Development Tasks</li> <li>Troubleshooting</li> </ol>"},{"location":"DEVELOPER_GUIDE/#getting-started","title":"Getting Started","text":""},{"location":"DEVELOPER_GUIDE/#development-environment-setup","title":"Development Environment Setup","text":"<ol> <li> <p>Clone the repository <pre><code>git clone &lt;repository-url&gt;\ncd classpulse\n</code></pre></p> </li> <li> <p>Create and activate a virtual environment <pre><code>python3 -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n</code></pre></p> </li> <li> <p>Install dependencies <pre><code>pip install python-fasthtml\n</code></pre></p> </li> <li> <p>Run the development server <pre><code>python app.py\n</code></pre></p> </li> <li> <p>Access the application    Open your browser and navigate to http://localhost:5002</p> </li> </ol>"},{"location":"DEVELOPER_GUIDE/#development-workflow","title":"Development Workflow","text":"<ol> <li>Create a feature branch for your changes</li> <li>Make your code changes</li> <li>Test your changes locally</li> <li>Create a pull request for review</li> </ol>"},{"location":"DEVELOPER_GUIDE/#project-structure","title":"Project Structure","text":"<p>ClassPulse follows a modular structure:</p> <pre><code>~/projects/classpulse/\n\u251c\u2500\u2500 app.py                  # Main application entry point\n\u251c\u2500\u2500 models/\n\u2502   \u2514\u2500\u2500 schema.py           # Database schema definitions\n\u251c\u2500\u2500 controllers/\n\u2502   \u251c\u2500\u2500 auth_routes.py      # Authentication routes\n\u2502   \u251c\u2500\u2500 audience_routes.py  # Audience participation routes\n\u2502   \u251c\u2500\u2500 presenter_routes.py # Presenter dashboard routes \n\u2502   \u251c\u2500\u2500 question_routes.py  # Question management routes\n\u2502   \u2514\u2500\u2500 websocket_routes.py # Real-time WebSocket routes\n\u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 auth.py             # Authentication utilities\n\u2502   \u251c\u2500\u2500 components.py       # Reusable UI components\n\u2502   \u251c\u2500\u2500 qrcode.py           # QR code generation\n\u2502   \u2514\u2500\u2500 session_manager.py  # Session management utilities\n\u251c\u2500\u2500 static/\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u2502   \u2514\u2500\u2500 styles.css      # Custom styling\n\u2502   \u251c\u2500\u2500 js/\n\u2502   \u2502   \u2514\u2500\u2500 main.js         # JavaScript functionality\n\u2502   \u2514\u2500\u2500 img/                # Image assets\n\u2514\u2500\u2500 templates/\n    \u251c\u2500\u2500 audience/           # Audience view templates \n    \u2514\u2500\u2500 presenter/          # Presenter view templates\n</code></pre>"},{"location":"DEVELOPER_GUIDE/#key-components","title":"Key Components","text":""},{"location":"DEVELOPER_GUIDE/#fasthtml-framework","title":"FastHTML Framework","text":"<p>ClassPulse uses the FastHTML framework, which is built on top of Starlette. FastHTML provides a convenient way to generate HTML using Python syntax.</p> <p>Key concepts: - HTML tags are represented as Python functions (e.g., <code>Div()</code>, <code>P()</code>) - Route handlers are defined with the <code>@rt</code> decorator - Components can be created as Python functions that return HTML elements</p> <p>Example of a FastHTML component: <pre><code>def layout(*content, title=\"ClassPulse\"):\n    \"\"\"Main layout component\"\"\"\n    return Titled(\n        title,\n        Header(\n            # Header content...\n        ),\n        Main(\n            Div(*content, cls=\"container\"),\n            cls=\"content\"\n        ),\n        Footer(\n            # Footer content...\n        )\n    )\n</code></pre></p>"},{"location":"DEVELOPER_GUIDE/#route-controllers","title":"Route Controllers","text":"<p>Route controllers are organized by feature area:</p> <ol> <li>auth_routes.py: Handles login/logout functionality</li> <li>audience_routes.py: Manages audience-facing views and responses</li> <li>presenter_routes.py: Provides presenter dashboard and management</li> <li>question_routes.py: Handles question creation and results</li> <li>websocket_routes.py: Manages real-time updates</li> </ol> <p>Each controller module follows a similar pattern: - A main setup function that takes the route decorator (<code>rt</code>) - Route handler functions for GET/POST requests - Returns HTML content or redirects as appropriate</p> <p>Example: <pre><code>def setup_auth_routes(rt):\n    \"\"\"Set up authentication related routes\"\"\"\n\n    @rt(\"/login\")\n    def get():\n        # Route implementation...\n\n    @rt(\"/login\")\n    def post(username: str, password: str, session):\n        # Route implementation...\n\n    return rt\n</code></pre></p>"},{"location":"DEVELOPER_GUIDE/#utility-modules","title":"Utility Modules","text":"<ol> <li>auth.py: Handles password hashing, user authentication</li> <li>components.py: Provides reusable UI components</li> <li>qrcode.py: Generates QR codes for session joining</li> <li>session_manager.py: Manages sessions, questions, and responses</li> </ol>"},{"location":"DEVELOPER_GUIDE/#database-schema","title":"Database Schema","text":"<p>ClassPulse uses SQLite with the FastLite ORM. Tables are defined in <code>models/schema.py</code>:</p> <ol> <li>users: Stores presenter accounts</li> <li>sessions: Stores presentation sessions</li> <li>questions: Stores questions of different types</li> <li>responses: Stores audience responses</li> </ol> <p>Example query patterns:</p> <pre><code># Get a specific record by ID\nuser = users[user_id]\n\n# Query with conditions\nsession_list = sessions(where=\"code = ?\", where_args=[code])\n\n# Insert a record\nuser = User(username=\"example\", password_hash=\"hash\", email=\"email\")\nusers.insert(user)\n\n# Update a record\nuser.display_name = \"New Name\"\nusers.update(user)\n</code></pre>"},{"location":"DEVELOPER_GUIDE/#authentication-flow","title":"Authentication Flow","text":"<ol> <li>Login Process:</li> <li>User submits username/password to <code>/login</code> (POST)</li> <li><code>authenticate_user()</code> verifies credentials</li> <li>On success, user ID is stored in session</li> <li> <p>User is redirected to dashboard</p> </li> <li> <p>Authentication Middleware:</p> </li> <li>Checks for user_id in session</li> <li>Allows public routes (/login, /join, /audience/*)</li> <li> <p>Redirects to login for protected routes if not authenticated</p> </li> <li> <p>Password Security:</p> </li> <li>Passwords are hashed using PBKDF2 with salt</li> <li>Verification compares hashed passwords</li> </ol>"},{"location":"DEVELOPER_GUIDE/#session-management","title":"Session Management","text":"<p>Sessions in ClassPulse refer to presentation sessions, not web sessions:</p> <ol> <li>Creation:</li> <li>Presenter creates a session with a name</li> <li>System generates a unique 6-digit code</li> <li> <p>Session is associated with the creator</p> </li> <li> <p>Question Management:</p> </li> <li>Presenter can add questions of different types</li> <li>Questions can be activated/deactivated</li> <li> <p>Questions are ordered within the session</p> </li> <li> <p>Audience Joining:</p> </li> <li>Audience members join using the session code</li> <li>They receive a unique respondent ID (UUID)</li> <li>They can view and answer active questions</li> </ol>"},{"location":"DEVELOPER_GUIDE/#websocket-implementation","title":"WebSocket Implementation","text":"<p>Real-time updates use WebSockets:</p> <ol> <li>Connection Setup:</li> <li>Presenter connects to <code>/ws/results/{question_id}</code></li> <li> <p>Connection is stored in a dictionary by question ID</p> </li> <li> <p>Update Process:</p> </li> <li>When responses arrive, stats are calculated</li> <li>Updates are sent to all connections for that question</li> <li> <p>Updates include formatted HTML with result information</p> </li> <li> <p>Client-Side Handling:</p> </li> <li>HTMX handles WebSocket connections and updates</li> <li>Charts are re-rendered when data changes</li> </ol>"},{"location":"DEVELOPER_GUIDE/#adding-a-new-question-type","title":"Adding a New Question Type","text":"<p>To add a new question type (e.g., \"Ranking\"):</p> <ol> <li>Update Schema:</li> <li>No schema change needed, as the <code>type</code> field is a string</li> <li>Add a new creation function in <code>session_manager.py</code>:</li> </ol> <pre><code>def create_ranking_question(session_id: int, title: str, items: List[str]) -&gt; Question:\n    \"\"\"Create a ranking question\"\"\"\n    question = Question(\n        session_id=session_id,\n        type='ranking',\n        title=title,\n        options=json.dumps(items),\n        active=True,\n        created_at=datetime.now().isoformat(),\n        order=0\n    )\n\n    return questions.insert(question)\n</code></pre> <ol> <li>Add Result Processing:</li> <li>Add a function to process results in <code>session_manager.py</code>:</li> </ol> <pre><code>def get_ranking_results(question_id: int) -&gt; Dict[str, Dict[str, int]]:\n    \"\"\"Get results for a ranking question\"\"\"\n    # Implementation...\n</code></pre> <ol> <li>Update Controllers:</li> <li>Add a new route in <code>question_routes.py</code> for creation</li> <li>Extend <code>audience_routes.py</code> to handle the new question type</li> <li> <p>Update visualization in <code>questions/{id}/results</code></p> </li> <li> <p>Add UI Components:</p> </li> <li>Create audience interface for ranking questions</li> <li>Add visualization code for ranking results</li> </ol>"},{"location":"DEVELOPER_GUIDE/#customizing-visualizations","title":"Customizing Visualizations","text":"<p>Visualizations are handled through Chart.js:</p> <ol> <li>Chart Configuration:</li> <li>Chart options are in <code>question_routes.py</code> in the results route</li> <li> <p>Different configurations are used based on question type</p> </li> <li> <p>Customizing Charts:</p> </li> <li>Modify the chart configuration in <code>question_routes.py</code></li> <li>Update the initialization code in <code>static/js/main.js</code></li> </ol> <p>Example for changing chart colors: <pre><code>new Chart(ctx, {\n    type: chartType,\n    data: chartData,\n    options: {\n        // ...existing options\n        plugins: {\n            legend: {\n                labels: {\n                    color: '#333'\n                }\n            }\n        }\n    }\n});\n</code></pre></p>"},{"location":"DEVELOPER_GUIDE/#common-development-tasks","title":"Common Development Tasks","text":""},{"location":"DEVELOPER_GUIDE/#adding-a-new-route","title":"Adding a New Route","text":"<ol> <li>Choose the appropriate controller file</li> <li>Add a route handler function:</li> </ol> <pre><code>@rt(\"/my-new-route\")\ndef get():\n    return layout(\n        H2(\"My New Page\"),\n        P(\"Page content here\")\n    )\n</code></pre> <ol> <li>If needed, add a POST handler:</li> </ol> <pre><code>@rt(\"/my-new-route\")\ndef post(param1: str, param2: int):\n    # Process the submission\n    return RedirectResponse(\"/some-page\", status_code=303)\n</code></pre>"},{"location":"DEVELOPER_GUIDE/#creating-a-new-ui-component","title":"Creating a New UI Component","text":"<p>Create a function that returns HTML elements:</p> <pre><code>def my_component(title, content):\n    return Div(\n        H3(title),\n        P(content),\n        cls=\"my-component\"\n    )\n</code></pre> <p>Then use it in your routes:</p> <pre><code>@rt(\"/some-route\")\ndef get():\n    return layout(\n        my_component(\"Title 1\", \"Content 1\"),\n        my_component(\"Title 2\", \"Content 2\")\n    )\n</code></pre>"},{"location":"DEVELOPER_GUIDE/#extending-the-database-schema","title":"Extending the Database Schema","text":"<p>To add a new table or field:</p> <ol> <li>Update <code>models/schema.py</code>:</li> </ol> <pre><code># Add a new table\nsettings = db.t.settings\nif settings not in db.t:\n    settings.create(\n        id=int,\n        user_id=int,\n        theme=str,\n        notifications=bool,\n        pk='id'\n    )\nSetting = settings.dataclass()\n</code></pre> <ol> <li>Add helper functions as needed in utility modules</li> <li>Update controllers to use the new schema elements</li> </ol>"},{"location":"DEVELOPER_GUIDE/#troubleshooting","title":"Troubleshooting","text":""},{"location":"DEVELOPER_GUIDE/#common-issues","title":"Common Issues","text":"<ol> <li>Database Errors:</li> <li>Check table creation in <code>schema.py</code></li> <li> <p>Verify query parameters in function calls</p> </li> <li> <p>Route Errors:</p> </li> <li>Ensure route decorators don't conflict</li> <li> <p>Check parameter types match between routes and inputs</p> </li> <li> <p>WebSocket Issues:</p> </li> <li>Verify WebSocket connection setup</li> <li>Check browser console for connection errors</li> </ol>"},{"location":"DEVELOPER_GUIDE/#development-tips","title":"Development Tips","text":"<ol> <li>Debug Mode:</li> <li>The application runs in debug mode by default</li> <li> <p>Error details are displayed in the console and browser</p> </li> <li> <p>Interactive Debugging:</p> </li> <li>Add print statements for debugging</li> <li> <p>Use browser developer tools for frontend issues</p> </li> <li> <p>Database Inspection:</p> </li> <li> <p>Use SQLite tools to inspect the database directly:    <pre><code>sqlite3 classpulse.db\n.tables\nSELECT * FROM users;\n</code></pre></p> </li> <li> <p>Testing WebSockets:</p> </li> <li>Test WebSocket connections with browser developer tools</li> <li>Monitor the network tab for WebSocket frames</li> </ol>"},{"location":"GETTING_STARTED/","title":"Getting Started with ClassPulse","text":"<p>This guide will walk you through the setup, installation, and basic usage of ClassPulse, an interactive audience engagement tool.</p>"},{"location":"GETTING_STARTED/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.8 or higher</li> <li>pip (Python package installer)</li> <li>Basic familiarity with terminal/command line</li> </ul>"},{"location":"GETTING_STARTED/#installation","title":"Installation","text":"<ol> <li>Clone the repository</li> </ol> <pre><code>git clone &lt;repository-url&gt;\ncd classpulse\n</code></pre> <ol> <li>Create a virtual environment</li> </ol> <pre><code>python3 -m venv venv\n</code></pre> <ol> <li>Activate the virtual environment</li> </ol> <p>On macOS/Linux:    <pre><code>source venv/bin/activate\n</code></pre></p> <p>On Windows:    <pre><code>venv\\Scripts\\activate\n</code></pre></p> <ol> <li>Install dependencies</li> </ol> <pre><code>pip install python-fasthtml\n</code></pre> <ol> <li>Run the application</li> </ol> <pre><code>python app.py\n</code></pre> <ol> <li>Access the application</li> </ol> <p>Open your web browser and navigate to:    <pre><code>http://localhost:5002\n</code></pre></p>"},{"location":"GETTING_STARTED/#quick-start-guide","title":"Quick Start Guide","text":""},{"location":"GETTING_STARTED/#for-presenters","title":"For Presenters","text":"<ol> <li>Login</li> <li> <p>Use the default admin credentials:</p> <ul> <li>Username: <code>admin</code></li> <li>Password: <code>admin123</code></li> </ul> </li> <li> <p>Create a Session</p> </li> <li>From the dashboard, click \"Create New Session\"</li> <li>Enter a name for your session (e.g., \"Python Workshop\", \"Marketing Presentation\")</li> <li> <p>Click \"Create Session\"</p> </li> <li> <p>Add Questions</p> </li> <li>On the session management page, you'll see options to add different types of questions</li> <li> <p>Click the appropriate button for the question type you want to create:</p> <ul> <li>\"New Multiple Choice\" for multiple-choice questions</li> <li>\"New Word Cloud\" for word cloud questions</li> <li>\"New Rating Scale\" for rating questions</li> </ul> </li> <li> <p>Configure Your Questions</p> </li> <li> <p>For Multiple Choice Questions:</p> <ul> <li>Enter the question title</li> <li>Add options (one per line)</li> <li>Click \"Create Question\"</li> </ul> </li> <li> <p>For Word Cloud Questions:</p> <ul> <li>Enter the question title</li> <li>Click \"Create Question\"</li> </ul> </li> <li> <p>For Rating Scale Questions:</p> <ul> <li>Enter the question title</li> <li>Specify maximum rating value (default is 5)</li> <li>Click \"Create Question\"</li> </ul> </li> <li> <p>Activate Questions</p> </li> <li>Questions are active by default</li> <li> <p>You can toggle questions on/off using the \"Toggle Status\" button</p> </li> <li> <p>Share Your Session</p> </li> <li>Note the 6-digit session code displayed on the session management page</li> <li>Share this code with your audience</li> <li> <p>Alternatively, share the QR code which will be displayed on the session page</p> </li> <li> <p>Present Mode</p> </li> <li>Click \"Present Mode\" to enter the presentation view</li> <li>This view shows real-time results as participants respond</li> <li> <p>The session code and QR code are prominently displayed for easy joining</p> </li> <li> <p>View Results</p> </li> <li>Click \"Results\" next to any question to view detailed response data</li> <li> <p>Data is visualized according to the question type:</p> <ul> <li>Bar charts for multiple choice</li> <li>Word clouds for word cloud questions</li> <li>Bar charts for rating scales</li> </ul> </li> <li> <p>Export Data</p> </li> <li>From the question results page, click \"Export Results\" to download the data as CSV</li> <li>From the session management page, click \"Export\" to download all session data</li> </ol>"},{"location":"GETTING_STARTED/#for-audience-members","title":"For Audience Members","text":"<ol> <li>Join a Session</li> <li>Navigate to the ClassPulse application (or dedicated join URL if provided)</li> <li>Click \"Join a session as audience\" on the login page</li> <li>Enter the 6-digit session code provided by the presenter</li> <li>Click \"Join\"</li> <li> <p>Alternatively, scan the QR code if shown by the presenter</p> </li> <li> <p>Answer Questions</p> </li> <li>You will see all active questions for the session</li> <li> <p>For each question type, the interface is slightly different:</p> </li> <li> <p>Multiple Choice Questions:</p> <ul> <li>Select your preferred option</li> <li>Click \"Submit Answer\"</li> </ul> </li> <li> <p>Word Cloud Questions:</p> <ul> <li>Enter words or short phrases</li> <li>Click \"Submit Answer\"</li> </ul> </li> <li> <p>Rating Scale Questions:</p> <ul> <li>Select a rating from the available options</li> <li>Click \"Submit Rating\"</li> </ul> </li> <li> <p>Confirmation</p> </li> <li>After submitting, you'll see a confirmation message</li> <li>You can change your answers by submitting again if needed</li> </ol>"},{"location":"GETTING_STARTED/#using-question-types-effectively","title":"Using Question Types Effectively","text":""},{"location":"GETTING_STARTED/#multiple-choice-questions","title":"Multiple Choice Questions","text":"<p>Best for: - Gauging opinion on specific options - Testing knowledge with single correct answers - Polls with distinct choices</p> <p>Tips: - Keep options clear and concise - Avoid overlap between options - Limit to 3-6 options for readability - Consider including an \"Other\" option when appropriate</p> <p>Example: <pre><code>Which programming language are you most comfortable with?\n- Python\n- JavaScript\n- Java\n- C/C++\n- Other\n</code></pre></p>"},{"location":"GETTING_STARTED/#word-cloud-questions","title":"Word Cloud Questions","text":"<p>Best for: - Gathering diverse text responses - Brainstorming sessions - Collecting feedback in the participants' own words</p> <p>Tips: - Ask open-ended but focused questions - Encourage participants to use single words or short phrases - Let participants know multiple words create multiple entries - Include clear context in the question</p> <p>Example: <pre><code>What words would you use to describe today's workshop?\n</code></pre></p>"},{"location":"GETTING_STARTED/#rating-scale-questions","title":"Rating Scale Questions","text":"<p>Best for: - Satisfaction surveys - Measuring agreement/disagreement - Numerical feedback</p> <p>Tips: - Clearly define what the scale represents - Consider using a 5-point scale for most purposes - Adjust max rating to match your specific needs - Include the scale context in the question</p> <p>Example: <pre><code>How useful did you find today's content? (1 = Not at all useful, 5 = Extremely useful)\n</code></pre></p>"},{"location":"GETTING_STARTED/#best-practices-for-effective-sessions","title":"Best Practices for Effective Sessions","text":"<ol> <li>Prepare Questions in Advance</li> <li>Create all your questions before the session starts</li> <li>Test them to ensure they work as expected</li> <li> <p>Consider the flow of questions within your presentation</p> </li> <li> <p>Introduce the Tool</p> </li> <li>Take a moment to explain how to join and participate</li> <li>Demonstrate how to respond to each question type</li> <li> <p>Emphasize that responses are anonymous</p> </li> <li> <p>Balance Question Types</p> </li> <li>Use multiple choice for specific, focused feedback</li> <li>Use word clouds for creative, open-ended input</li> <li> <p>Use rating scales for quantifiable feedback</p> </li> <li> <p>Timing Matters</p> </li> <li>Activate questions at appropriate moments during your presentation</li> <li>Give sufficient time for responses (usually 30-60 seconds)</li> <li> <p>Deactivate questions when you're ready to move on</p> </li> <li> <p>Discuss Results</p> </li> <li>Take time to acknowledge and discuss the results</li> <li>Highlight interesting patterns or unexpected responses</li> <li> <p>Use the results to guide further discussion</p> </li> <li> <p>Follow Up</p> </li> <li>Export session data for further analysis</li> <li>Share results with participants if appropriate</li> <li>Use insights to improve future sessions</li> </ol>"},{"location":"GETTING_STARTED/#customizing-classpulse","title":"Customizing ClassPulse","text":"<p>ClassPulse is designed to be extensible. Some common customizations:</p> <ol> <li>Changing the Theme</li> <li> <p>Edit <code>static/css/styles.css</code> to customize colors and styling</p> </li> <li> <p>Adding Question Types</p> </li> <li> <p>See the Developer Guide for instructions on adding new question types</p> </li> <li> <p>Custom Authentication</p> </li> <li> <p>Modify <code>utils/auth.py</code> to integrate with your authentication system</p> </li> <li> <p>Display Customizations</p> </li> <li>Adjust chart appearance in <code>static/js/main.js</code></li> <li>Modify layout templates in <code>utils/components.py</code></li> </ol>"},{"location":"GETTING_STARTED/#troubleshooting","title":"Troubleshooting","text":""},{"location":"GETTING_STARTED/#common-issues","title":"Common Issues","text":"<p>Issue: Application won't start - Ensure Python 3.8+ is installed - Verify the virtual environment is activated - Check that you installed all dependencies - Make sure no other application is using port 5002</p> <p>Issue: Can't log in - Default credentials are admin/admin123 - Check if the database file (classpulse.db) exists and isn't corrupted</p> <p>Issue: Audience can't join session - Verify the session is active (toggle if needed) - Ensure the correct session code is being used - Check that the audience is using the correct URL</p> <p>Issue: Real-time updates not working - Ensure WebSockets are supported in the browser - Check network connectivity - Verify that the presenter is in Present Mode</p> <p>Issue: Charts not displaying - Ensure JavaScript is enabled in the browser - Check the browser console for errors - Verify that responses have been submitted</p>"},{"location":"GETTING_STARTED/#next-steps","title":"Next Steps","text":"<p>After getting familiar with the basic functionality, consider exploring:</p> <ol> <li>Advanced Features</li> <li>Explore the documentation on exporting and analyzing results</li> <li> <p>Try different question configurations for various scenarios</p> </li> <li> <p>Development</p> </li> <li>Check the Developer Guide for information on extending the platform</li> <li> <p>Review the code structure to understand how components interact</p> </li> <li> <p>Feedback</p> </li> <li>Use ClassPulse in real sessions and gather feedback</li> <li>Contribute improvements to the project</li> </ol> <p>For more detailed information, refer to other documentation: - API Reference - Architecture - Developer Guide - Data Flow - Technical Specification</p>"},{"location":"SPECIFICATION/","title":"ClassPulse Technical Specification","text":""},{"location":"SPECIFICATION/#1-introduction","title":"1. Introduction","text":"<p>ClassPulse is a real-time audience interaction system designed for presenters to engage their audience through interactive questions and visualize responses in real-time.</p>"},{"location":"SPECIFICATION/#11-purpose","title":"1.1 Purpose","text":"<p>This document defines the technical specifications for ClassPulse, including functional requirements, data models, APIs, and user interfaces.</p>"},{"location":"SPECIFICATION/#12-scope","title":"1.2 Scope","text":"<p>ClassPulse enables presenters to: - Create interactive sessions with unique join codes - Add different types of questions (multiple choice, word cloud, rating scale) - View real-time responses through visualizations - Export results for analysis</p> <p>Audience members can: - Join sessions using a code or QR scan - Respond to active questions - See confirmation of submitted responses</p>"},{"location":"SPECIFICATION/#2-functional-requirements","title":"2. Functional Requirements","text":""},{"location":"SPECIFICATION/#21-authentication-system","title":"2.1 Authentication System","text":"Requirement ID Description Priority AUTH-1 System shall provide login functionality for presenters High AUTH-2 System shall support password hashing for security High AUTH-3 System shall provide session-based authentication High AUTH-4 System shall redirect unauthenticated users to login page High AUTH-5 System shall support anonymous access for audience members High"},{"location":"SPECIFICATION/#22-session-management","title":"2.2 Session Management","text":"Requirement ID Description Priority SESS-1 System shall generate unique 6-digit session codes High SESS-2 System shall support session activation/deactivation Medium SESS-3 System shall associate sessions with creator High SESS-4 System shall generate QR codes for session joining Medium SESS-5 System shall list all sessions for a presenter Medium"},{"location":"SPECIFICATION/#23-question-management","title":"2.3 Question Management","text":"Requirement ID Description Priority QUES-1 System shall support multiple choice questions High QUES-2 System shall support word cloud questions High QUES-3 System shall support rating scale questions High QUES-4 System shall allow questions to be activated/deactivated Medium QUES-5 System shall store question configuration (options, max ratings) High"},{"location":"SPECIFICATION/#24-response-collection","title":"2.4 Response Collection","text":"Requirement ID Description Priority RESP-1 System shall collect and store audience responses High RESP-2 System shall associate responses with respondent IDs High RESP-3 System shall update response if respondent submits again Medium RESP-4 System shall validate responses against question type Medium RESP-5 System shall provide confirmation on submission Medium"},{"location":"SPECIFICATION/#25-real-time-updates","title":"2.5 Real-time Updates","text":"Requirement ID Description Priority REAL-1 System shall update presenters in real-time as responses arrive High REAL-2 System shall use WebSockets for real-time communication High REAL-3 System shall handle connection management gracefully Medium REAL-4 System shall update visualizations without page reload High"},{"location":"SPECIFICATION/#26-data-export","title":"2.6 Data Export","text":"Requirement ID Description Priority EXP-1 System shall allow export of individual question results Medium EXP-2 System shall allow export of entire session data Medium EXP-3 System shall export data in CSV format Medium"},{"location":"SPECIFICATION/#3-data-models","title":"3. Data Models","text":""},{"location":"SPECIFICATION/#31-user","title":"3.1 User","text":"Field Type Description id Integer Primary key username String Unique username password_hash String Hashed password with salt email String User email display_name String Display name for UI"},{"location":"SPECIFICATION/#32-session","title":"3.2 Session","text":"Field Type Description id Integer Primary key code String Unique 6-digit join code name String Session name created_at String ISO timestamp of creation user_id Integer Foreign key to User active Boolean Session active status"},{"location":"SPECIFICATION/#33-question","title":"3.3 Question","text":"Field Type Description id Integer Primary key session_id Integer Foreign key to Session type String Question type (multiple_choice, word_cloud, rating) title String Question text options String JSON string of options or configuration active Boolean Question active status created_at String ISO timestamp of creation order Integer Display order in session"},{"location":"SPECIFICATION/#34-response","title":"3.4 Response","text":"Field Type Description id Integer Primary key question_id Integer Foreign key to Question session_id Integer Foreign key to Session response_value String Response content respondent_id String Anonymous UUID for audience member created_at String ISO timestamp of response"},{"location":"SPECIFICATION/#4-api-endpoints","title":"4. API Endpoints","text":""},{"location":"SPECIFICATION/#41-authentication","title":"4.1 Authentication","text":"Endpoint Method Description /login GET Show login page /login POST Process login credentials /logout GET Log out current user"},{"location":"SPECIFICATION/#42-presenter-routes","title":"4.2 Presenter Routes","text":"Endpoint Method Description / GET Dashboard with active sessions /sessions GET List all sessions /sessions/new GET Form to create new session /sessions/new POST Create a new session /sessions/{id} GET Manage specific session /present/{id} GET Present mode for session"},{"location":"SPECIFICATION/#43-question-routes","title":"4.3 Question Routes","text":"Endpoint Method Description /sessions/{session_id}/questions/new/{type} GET Form for new question /sessions/{session_id}/questions/new/{type} POST Create new question /questions/{id}/results GET View question results /questions/{id}/export GET Export question results as CSV /sessions/{id}/export GET Export session results as CSV"},{"location":"SPECIFICATION/#44-api-endpoints","title":"4.4 API Endpoints","text":"Endpoint Method Description /api/sessions/{id}/toggle POST Toggle session status /api/questions/{id}/toggle POST Toggle question status"},{"location":"SPECIFICATION/#45-audience-routes","title":"4.5 Audience Routes","text":"Endpoint Method Description /join GET Show join form /join POST Process join request /audience/{code} GET Audience view for answering /audience/respond/{question_id} POST Submit response"},{"location":"SPECIFICATION/#46-websocket-endpoints","title":"4.6 WebSocket Endpoints","text":"Endpoint Description /ws/results/{question_id} Real-time updates for question results"},{"location":"SPECIFICATION/#5-user-interface-specifications","title":"5. User Interface Specifications","text":""},{"location":"SPECIFICATION/#51-layout-and-components","title":"5.1 Layout and Components","text":"<ul> <li>Main layout with header, content area, and footer</li> <li>Responsive design for mobile and desktop</li> <li>Consistent styling and color scheme</li> </ul>"},{"location":"SPECIFICATION/#52-presenter-interfaces","title":"5.2 Presenter Interfaces","text":"<ul> <li>Dashboard with session cards</li> <li>Session management with question list</li> <li>Present mode with real-time results</li> <li>Result visualizations based on question type</li> </ul>"},{"location":"SPECIFICATION/#53-audience-interfaces","title":"5.3 Audience Interfaces","text":"<ul> <li>Simple join page with code input</li> <li>Question display based on type</li> <li>Confirmation messages after submission</li> </ul>"},{"location":"SPECIFICATION/#54-visualizations","title":"5.4 Visualizations","text":"<ul> <li>Bar charts for multiple choice questions</li> <li>Word clouds for word cloud questions</li> <li>Bar charts for rating scales</li> </ul>"},{"location":"SPECIFICATION/#6-non-functional-requirements","title":"6. Non-Functional Requirements","text":""},{"location":"SPECIFICATION/#61-performance","title":"6.1 Performance","text":"<ul> <li>Response time &lt; 500ms for standard operations</li> <li>Real-time updates within 2 seconds of submission</li> <li>Support for at least 100 concurrent audience members</li> </ul>"},{"location":"SPECIFICATION/#62-security","title":"6.2 Security","text":"<ul> <li>Password hashing with PBKDF2</li> <li>Session-based authentication</li> <li>Input validation and sanitization</li> </ul>"},{"location":"SPECIFICATION/#63-reliability","title":"6.3 Reliability","text":"<ul> <li>Graceful handling of disconnections</li> <li>Data persistence for responses</li> <li>Error handling for all operations</li> </ul>"},{"location":"SPECIFICATION/#64-compatibility","title":"6.4 Compatibility","text":"<ul> <li>Support for modern browsers (Chrome, Firefox, Safari, Edge)</li> <li>Responsive design for mobile devices</li> </ul>"},{"location":"SPECIFICATION/#7-implementation-details","title":"7. Implementation Details","text":""},{"location":"SPECIFICATION/#71-technology-stack","title":"7.1 Technology Stack","text":"<ul> <li>Backend: Python with FastHTML framework</li> <li>Frontend: HTML, CSS, JavaScript</li> <li>Database: SQLite with FastLite ORM</li> <li>Real-time: WebSockets</li> <li>Visualizations: Chart.js and jQCloud</li> </ul>"},{"location":"SPECIFICATION/#72-directory-structure","title":"7.2 Directory Structure","text":"<pre><code>~/projects/classpulse/\n\u251c\u2500\u2500 app.py                  # Main application entry point\n\u251c\u2500\u2500 models/\n\u2502   \u2514\u2500\u2500 schema.py           # Database schema definitions\n\u251c\u2500\u2500 controllers/\n\u2502   \u251c\u2500\u2500 auth_routes.py      # Authentication routes\n\u2502   \u251c\u2500\u2500 audience_routes.py  # Audience participation routes\n\u2502   \u251c\u2500\u2500 presenter_routes.py # Presenter dashboard routes \n\u2502   \u251c\u2500\u2500 question_routes.py  # Question management routes\n\u2502   \u2514\u2500\u2500 websocket_routes.py # Real-time WebSocket routes\n\u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 auth.py             # Authentication utilities\n\u2502   \u251c\u2500\u2500 components.py       # Reusable UI components\n\u2502   \u251c\u2500\u2500 qrcode.py           # QR code generation\n\u2502   \u2514\u2500\u2500 session_manager.py  # Session management utilities\n\u251c\u2500\u2500 static/\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u2502   \u2514\u2500\u2500 styles.css      # Custom styling\n\u2502   \u251c\u2500\u2500 js/\n\u2502   \u2502   \u2514\u2500\u2500 main.js         # JavaScript functionality\n\u2502   \u2514\u2500\u2500 img/                # Image assets\n\u2514\u2500\u2500 templates/\n    \u251c\u2500\u2500 audience/           # Audience view templates \n    \u2514\u2500\u2500 presenter/          # Presenter view templates\n</code></pre>"},{"location":"SPECIFICATION/#8-testing-strategy","title":"8. Testing Strategy","text":""},{"location":"SPECIFICATION/#81-unit-testing","title":"8.1 Unit Testing","text":"<ul> <li>Test utility functions for auth, session management</li> <li>Test database operations and queries</li> <li>Test API endpoints</li> </ul>"},{"location":"SPECIFICATION/#82-integration-testing","title":"8.2 Integration Testing","text":"<ul> <li>Test workflows (create session, add questions, join, respond)</li> <li>Test WebSocket communication</li> <li>Test data consistency across components</li> </ul>"},{"location":"SPECIFICATION/#83-user-acceptance-testing","title":"8.3 User Acceptance Testing","text":"<ul> <li>Test with actual presenters and audience scenarios</li> <li>Verify real-time updates work as expected</li> <li>Validate visualization accuracy</li> </ul>"},{"location":"SPECIFICATION/#9-deployment-considerations","title":"9. Deployment Considerations","text":""},{"location":"SPECIFICATION/#91-development-environment","title":"9.1 Development Environment","text":"<ul> <li>Local development with SQLite database</li> <li>Development server on port 5002</li> </ul>"},{"location":"SPECIFICATION/#92-production-deployment","title":"9.2 Production Deployment","text":"<ul> <li>Consider using PostgreSQL for larger deployments</li> <li>Deploy with Gunicorn and Nginx</li> <li>Implement proper logging and monitoring</li> <li>Consider containerization with Docker</li> </ul>"},{"location":"SPECIFICATION/#10-future-enhancements","title":"10. Future Enhancements","text":""},{"location":"SPECIFICATION/#101-potential-features","title":"10.1 Potential Features","text":"<ul> <li>Additional question types (open-ended, polls)</li> <li>User registration system</li> <li>Theme customization</li> <li>Timer functionality for questions</li> <li>More visualization options</li> <li>Integration with LMS platforms</li> </ul>"}]}